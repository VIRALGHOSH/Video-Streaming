#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Video_Streaming.Dbml
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_video_streaming")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_category(tbl_category instance);
    partial void Updatetbl_category(tbl_category instance);
    partial void Deletetbl_category(tbl_category instance);
    partial void Inserttbl_sub_category(tbl_sub_category instance);
    partial void Updatetbl_sub_category(tbl_sub_category instance);
    partial void Deletetbl_sub_category(tbl_sub_category instance);
    partial void Inserttbl_city(tbl_city instance);
    partial void Updatetbl_city(tbl_city instance);
    partial void Deletetbl_city(tbl_city instance);
    partial void Inserttbl_country(tbl_country instance);
    partial void Updatetbl_country(tbl_country instance);
    partial void Deletetbl_country(tbl_country instance);
    partial void Inserttbl_state(tbl_state instance);
    partial void Updatetbl_state(tbl_state instance);
    partial void Deletetbl_state(tbl_state instance);
    partial void Inserttbl_view(tbl_view instance);
    partial void Updatetbl_view(tbl_view instance);
    partial void Deletetbl_view(tbl_view instance);
    partial void Inserttbl_complain(tbl_complain instance);
    partial void Updatetbl_complain(tbl_complain instance);
    partial void Deletetbl_complain(tbl_complain instance);
    partial void Inserttbl_feedback(tbl_feedback instance);
    partial void Updatetbl_feedback(tbl_feedback instance);
    partial void Deletetbl_feedback(tbl_feedback instance);
    partial void Inserttbl_gender(tbl_gender instance);
    partial void Updatetbl_gender(tbl_gender instance);
    partial void Deletetbl_gender(tbl_gender instance);
    partial void Inserttbl_registration(tbl_registration instance);
    partial void Updatetbl_registration(tbl_registration instance);
    partial void Deletetbl_registration(tbl_registration instance);
    partial void Insertdemo(demo instance);
    partial void Updatedemo(demo instance);
    partial void Deletedemo(demo instance);
    partial void Inserttbl_login(tbl_login instance);
    partial void Updatetbl_login(tbl_login instance);
    partial void Deletetbl_login(tbl_login instance);
    partial void Inserttbl_comment(tbl_comment instance);
    partial void Updatetbl_comment(tbl_comment instance);
    partial void Deletetbl_comment(tbl_comment instance);
    partial void Inserttbl_video(tbl_video instance);
    partial void Updatetbl_video(tbl_video instance);
    partial void Deletetbl_video(tbl_video instance);
    partial void Inserttbl_subscription(tbl_subscription instance);
    partial void Updatetbl_subscription(tbl_subscription instance);
    partial void Deletetbl_subscription(tbl_subscription instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["db_video_streamingConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_category> tbl_categories
		{
			get
			{
				return this.GetTable<tbl_category>();
			}
		}
		
		public System.Data.Linq.Table<tbl_sub_category> tbl_sub_categories
		{
			get
			{
				return this.GetTable<tbl_sub_category>();
			}
		}
		
		public System.Data.Linq.Table<tbl_city> tbl_cities
		{
			get
			{
				return this.GetTable<tbl_city>();
			}
		}
		
		public System.Data.Linq.Table<tbl_country> tbl_countries
		{
			get
			{
				return this.GetTable<tbl_country>();
			}
		}
		
		public System.Data.Linq.Table<tbl_state> tbl_states
		{
			get
			{
				return this.GetTable<tbl_state>();
			}
		}
		
		public System.Data.Linq.Table<tbl_view> tbl_views
		{
			get
			{
				return this.GetTable<tbl_view>();
			}
		}
		
		public System.Data.Linq.Table<tbl_complain> tbl_complains
		{
			get
			{
				return this.GetTable<tbl_complain>();
			}
		}
		
		public System.Data.Linq.Table<tbl_feedback> tbl_feedbacks
		{
			get
			{
				return this.GetTable<tbl_feedback>();
			}
		}
		
		public System.Data.Linq.Table<tbl_gender> tbl_genders
		{
			get
			{
				return this.GetTable<tbl_gender>();
			}
		}
		
		public System.Data.Linq.Table<tbl_registration> tbl_registrations
		{
			get
			{
				return this.GetTable<tbl_registration>();
			}
		}
		
		public System.Data.Linq.Table<demo> demos
		{
			get
			{
				return this.GetTable<demo>();
			}
		}
		
		public System.Data.Linq.Table<tbl_login> tbl_logins
		{
			get
			{
				return this.GetTable<tbl_login>();
			}
		}
		
		public System.Data.Linq.Table<tbl_comment> tbl_comments
		{
			get
			{
				return this.GetTable<tbl_comment>();
			}
		}
		
		public System.Data.Linq.Table<tbl_video> tbl_videos
		{
			get
			{
				return this.GetTable<tbl_video>();
			}
		}
		
		public System.Data.Linq.Table<tbl_subscription> tbl_subscriptions
		{
			get
			{
				return this.GetTable<tbl_subscription>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_category")]
	public partial class tbl_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cat_id;
		
		private string _cat_name;
		
		private string _cat_des;
		
		private EntitySet<tbl_sub_category> _tbl_sub_categories;
		
		private EntitySet<tbl_video> _tbl_videos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncat_idChanging(int value);
    partial void Oncat_idChanged();
    partial void Oncat_nameChanging(string value);
    partial void Oncat_nameChanged();
    partial void Oncat_desChanging(string value);
    partial void Oncat_desChanged();
    #endregion
		
		public tbl_category()
		{
			this._tbl_sub_categories = new EntitySet<tbl_sub_category>(new Action<tbl_sub_category>(this.attach_tbl_sub_categories), new Action<tbl_sub_category>(this.detach_tbl_sub_categories));
			this._tbl_videos = new EntitySet<tbl_video>(new Action<tbl_video>(this.attach_tbl_videos), new Action<tbl_video>(this.detach_tbl_videos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_name", DbType="NVarChar(15)")]
		public string cat_name
		{
			get
			{
				return this._cat_name;
			}
			set
			{
				if ((this._cat_name != value))
				{
					this.Oncat_nameChanging(value);
					this.SendPropertyChanging();
					this._cat_name = value;
					this.SendPropertyChanged("cat_name");
					this.Oncat_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_des", DbType="NVarChar(60)")]
		public string cat_des
		{
			get
			{
				return this._cat_des;
			}
			set
			{
				if ((this._cat_des != value))
				{
					this.Oncat_desChanging(value);
					this.SendPropertyChanging();
					this._cat_des = value;
					this.SendPropertyChanged("cat_des");
					this.Oncat_desChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_category_tbl_sub_category", Storage="_tbl_sub_categories", ThisKey="cat_id", OtherKey="cat_id")]
		public EntitySet<tbl_sub_category> tbl_sub_categories
		{
			get
			{
				return this._tbl_sub_categories;
			}
			set
			{
				this._tbl_sub_categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_category_tbl_video", Storage="_tbl_videos", ThisKey="cat_id", OtherKey="cat_id")]
		public EntitySet<tbl_video> tbl_videos
		{
			get
			{
				return this._tbl_videos;
			}
			set
			{
				this._tbl_videos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_sub_categories(tbl_sub_category entity)
		{
			this.SendPropertyChanging();
			entity.tbl_category = this;
		}
		
		private void detach_tbl_sub_categories(tbl_sub_category entity)
		{
			this.SendPropertyChanging();
			entity.tbl_category = null;
		}
		
		private void attach_tbl_videos(tbl_video entity)
		{
			this.SendPropertyChanging();
			entity.tbl_category = this;
		}
		
		private void detach_tbl_videos(tbl_video entity)
		{
			this.SendPropertyChanging();
			entity.tbl_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_sub_category")]
	public partial class tbl_sub_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sub_cat_id;
		
		private System.Nullable<int> _cat_id;
		
		private string _sub_cat_name;
		
		private string _sub_cat_des;
		
		private EntitySet<tbl_video> _tbl_videos;
		
		private EntityRef<tbl_category> _tbl_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsub_cat_idChanging(int value);
    partial void Onsub_cat_idChanged();
    partial void Oncat_idChanging(System.Nullable<int> value);
    partial void Oncat_idChanged();
    partial void Onsub_cat_nameChanging(string value);
    partial void Onsub_cat_nameChanged();
    partial void Onsub_cat_desChanging(string value);
    partial void Onsub_cat_desChanged();
    #endregion
		
		public tbl_sub_category()
		{
			this._tbl_videos = new EntitySet<tbl_video>(new Action<tbl_video>(this.attach_tbl_videos), new Action<tbl_video>(this.detach_tbl_videos));
			this._tbl_category = default(EntityRef<tbl_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_cat_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sub_cat_id
		{
			get
			{
				return this._sub_cat_id;
			}
			set
			{
				if ((this._sub_cat_id != value))
				{
					this.Onsub_cat_idChanging(value);
					this.SendPropertyChanging();
					this._sub_cat_id = value;
					this.SendPropertyChanged("sub_cat_id");
					this.Onsub_cat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="Int")]
		public System.Nullable<int> cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._tbl_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_cat_name", DbType="NVarChar(15)")]
		public string sub_cat_name
		{
			get
			{
				return this._sub_cat_name;
			}
			set
			{
				if ((this._sub_cat_name != value))
				{
					this.Onsub_cat_nameChanging(value);
					this.SendPropertyChanging();
					this._sub_cat_name = value;
					this.SendPropertyChanged("sub_cat_name");
					this.Onsub_cat_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_cat_des", DbType="NVarChar(60)")]
		public string sub_cat_des
		{
			get
			{
				return this._sub_cat_des;
			}
			set
			{
				if ((this._sub_cat_des != value))
				{
					this.Onsub_cat_desChanging(value);
					this.SendPropertyChanging();
					this._sub_cat_des = value;
					this.SendPropertyChanged("sub_cat_des");
					this.Onsub_cat_desChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_sub_category_tbl_video", Storage="_tbl_videos", ThisKey="sub_cat_id", OtherKey="sub_cat_id")]
		public EntitySet<tbl_video> tbl_videos
		{
			get
			{
				return this._tbl_videos;
			}
			set
			{
				this._tbl_videos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_category_tbl_sub_category", Storage="_tbl_category", ThisKey="cat_id", OtherKey="cat_id", IsForeignKey=true)]
		public tbl_category tbl_category
		{
			get
			{
				return this._tbl_category.Entity;
			}
			set
			{
				tbl_category previousValue = this._tbl_category.Entity;
				if (((previousValue != value) 
							|| (this._tbl_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_category.Entity = null;
						previousValue.tbl_sub_categories.Remove(this);
					}
					this._tbl_category.Entity = value;
					if ((value != null))
					{
						value.tbl_sub_categories.Add(this);
						this._cat_id = value.cat_id;
					}
					else
					{
						this._cat_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_videos(tbl_video entity)
		{
			this.SendPropertyChanging();
			entity.tbl_sub_category = this;
		}
		
		private void detach_tbl_videos(tbl_video entity)
		{
			this.SendPropertyChanging();
			entity.tbl_sub_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_city")]
	public partial class tbl_city : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _city_id;
		
		private int _state_id;
		
		private int _country_id;
		
		private string _city_name;
		
		private EntitySet<tbl_registration> _tbl_registrations;
		
		private EntityRef<tbl_country> _tbl_country;
		
		private EntityRef<tbl_state> _tbl_state;
		
		private EntityRef<tbl_country> _tbl_country1;
		
		private EntityRef<tbl_state> _tbl_state1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncity_idChanging(int value);
    partial void Oncity_idChanged();
    partial void Onstate_idChanging(int value);
    partial void Onstate_idChanged();
    partial void Oncountry_idChanging(int value);
    partial void Oncountry_idChanged();
    partial void Oncity_nameChanging(string value);
    partial void Oncity_nameChanged();
    #endregion
		
		public tbl_city()
		{
			this._tbl_registrations = new EntitySet<tbl_registration>(new Action<tbl_registration>(this.attach_tbl_registrations), new Action<tbl_registration>(this.detach_tbl_registrations));
			this._tbl_country = default(EntityRef<tbl_country>);
			this._tbl_state = default(EntityRef<tbl_state>);
			this._tbl_country1 = default(EntityRef<tbl_country>);
			this._tbl_state1 = default(EntityRef<tbl_state>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="Int NOT NULL")]
		public int state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					if ((this._tbl_state.HasLoadedOrAssignedValue || this._tbl_state1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_id", DbType="Int NOT NULL")]
		public int country_id
		{
			get
			{
				return this._country_id;
			}
			set
			{
				if ((this._country_id != value))
				{
					if ((this._tbl_country.HasLoadedOrAssignedValue || this._tbl_country1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncountry_idChanging(value);
					this.SendPropertyChanging();
					this._country_id = value;
					this.SendPropertyChanged("country_id");
					this.Oncountry_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string city_name
		{
			get
			{
				return this._city_name;
			}
			set
			{
				if ((this._city_name != value))
				{
					this.Oncity_nameChanging(value);
					this.SendPropertyChanging();
					this._city_name = value;
					this.SendPropertyChanged("city_name");
					this.Oncity_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_city_tbl_registration", Storage="_tbl_registrations", ThisKey="city_id", OtherKey="city_id")]
		public EntitySet<tbl_registration> tbl_registrations
		{
			get
			{
				return this._tbl_registrations;
			}
			set
			{
				this._tbl_registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_country_tbl_city", Storage="_tbl_country", ThisKey="country_id", OtherKey="country_id", IsForeignKey=true)]
		public tbl_country tbl_country
		{
			get
			{
				return this._tbl_country.Entity;
			}
			set
			{
				tbl_country previousValue = this._tbl_country.Entity;
				if (((previousValue != value) 
							|| (this._tbl_country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_country.Entity = null;
						previousValue.tbl_cities.Remove(this);
					}
					this._tbl_country.Entity = value;
					if ((value != null))
					{
						value.tbl_cities.Add(this);
						this._country_id = value.country_id;
					}
					else
					{
						this._country_id = default(int);
					}
					this.SendPropertyChanged("tbl_country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_state_tbl_city", Storage="_tbl_state", ThisKey="state_id", OtherKey="state_id", IsForeignKey=true)]
		public tbl_state tbl_state
		{
			get
			{
				return this._tbl_state.Entity;
			}
			set
			{
				tbl_state previousValue = this._tbl_state.Entity;
				if (((previousValue != value) 
							|| (this._tbl_state.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_state.Entity = null;
						previousValue.tbl_cities.Remove(this);
					}
					this._tbl_state.Entity = value;
					if ((value != null))
					{
						value.tbl_cities.Add(this);
						this._state_id = value.state_id;
					}
					else
					{
						this._state_id = default(int);
					}
					this.SendPropertyChanged("tbl_state");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_country_tbl_city1", Storage="_tbl_country1", ThisKey="country_id", OtherKey="country_id", IsForeignKey=true)]
		public tbl_country tbl_country1
		{
			get
			{
				return this._tbl_country1.Entity;
			}
			set
			{
				tbl_country previousValue = this._tbl_country1.Entity;
				if (((previousValue != value) 
							|| (this._tbl_country1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_country1.Entity = null;
						previousValue.tbl_cities1.Remove(this);
					}
					this._tbl_country1.Entity = value;
					if ((value != null))
					{
						value.tbl_cities1.Add(this);
						this._country_id = value.country_id;
					}
					else
					{
						this._country_id = default(int);
					}
					this.SendPropertyChanged("tbl_country1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_state_tbl_city1", Storage="_tbl_state1", ThisKey="state_id", OtherKey="state_id", IsForeignKey=true)]
		public tbl_state tbl_state1
		{
			get
			{
				return this._tbl_state1.Entity;
			}
			set
			{
				tbl_state previousValue = this._tbl_state1.Entity;
				if (((previousValue != value) 
							|| (this._tbl_state1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_state1.Entity = null;
						previousValue.tbl_cities1.Remove(this);
					}
					this._tbl_state1.Entity = value;
					if ((value != null))
					{
						value.tbl_cities1.Add(this);
						this._state_id = value.state_id;
					}
					else
					{
						this._state_id = default(int);
					}
					this.SendPropertyChanged("tbl_state1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_registrations(tbl_registration entity)
		{
			this.SendPropertyChanging();
			entity.tbl_city = this;
		}
		
		private void detach_tbl_registrations(tbl_registration entity)
		{
			this.SendPropertyChanging();
			entity.tbl_city = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_country")]
	public partial class tbl_country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _country_id;
		
		private string _country_name;
		
		private EntitySet<tbl_city> _tbl_cities;
		
		private EntitySet<tbl_city> _tbl_cities1;
		
		private EntitySet<tbl_state> _tbl_states;
		
		private EntitySet<tbl_state> _tbl_states1;
		
		private EntitySet<tbl_registration> _tbl_registrations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncountry_idChanging(int value);
    partial void Oncountry_idChanged();
    partial void Oncountry_nameChanging(string value);
    partial void Oncountry_nameChanged();
    #endregion
		
		public tbl_country()
		{
			this._tbl_cities = new EntitySet<tbl_city>(new Action<tbl_city>(this.attach_tbl_cities), new Action<tbl_city>(this.detach_tbl_cities));
			this._tbl_cities1 = new EntitySet<tbl_city>(new Action<tbl_city>(this.attach_tbl_cities1), new Action<tbl_city>(this.detach_tbl_cities1));
			this._tbl_states = new EntitySet<tbl_state>(new Action<tbl_state>(this.attach_tbl_states), new Action<tbl_state>(this.detach_tbl_states));
			this._tbl_states1 = new EntitySet<tbl_state>(new Action<tbl_state>(this.attach_tbl_states1), new Action<tbl_state>(this.detach_tbl_states1));
			this._tbl_registrations = new EntitySet<tbl_registration>(new Action<tbl_registration>(this.attach_tbl_registrations), new Action<tbl_registration>(this.detach_tbl_registrations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int country_id
		{
			get
			{
				return this._country_id;
			}
			set
			{
				if ((this._country_id != value))
				{
					this.Oncountry_idChanging(value);
					this.SendPropertyChanging();
					this._country_id = value;
					this.SendPropertyChanged("country_id");
					this.Oncountry_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_name", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string country_name
		{
			get
			{
				return this._country_name;
			}
			set
			{
				if ((this._country_name != value))
				{
					this.Oncountry_nameChanging(value);
					this.SendPropertyChanging();
					this._country_name = value;
					this.SendPropertyChanged("country_name");
					this.Oncountry_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_country_tbl_city", Storage="_tbl_cities", ThisKey="country_id", OtherKey="country_id")]
		public EntitySet<tbl_city> tbl_cities
		{
			get
			{
				return this._tbl_cities;
			}
			set
			{
				this._tbl_cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_country_tbl_city1", Storage="_tbl_cities1", ThisKey="country_id", OtherKey="country_id")]
		public EntitySet<tbl_city> tbl_cities1
		{
			get
			{
				return this._tbl_cities1;
			}
			set
			{
				this._tbl_cities1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_country_tbl_state", Storage="_tbl_states", ThisKey="country_id", OtherKey="country_id")]
		public EntitySet<tbl_state> tbl_states
		{
			get
			{
				return this._tbl_states;
			}
			set
			{
				this._tbl_states.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_country_tbl_state1", Storage="_tbl_states1", ThisKey="country_id", OtherKey="country_id")]
		public EntitySet<tbl_state> tbl_states1
		{
			get
			{
				return this._tbl_states1;
			}
			set
			{
				this._tbl_states1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_country_tbl_registration", Storage="_tbl_registrations", ThisKey="country_id", OtherKey="country_id")]
		public EntitySet<tbl_registration> tbl_registrations
		{
			get
			{
				return this._tbl_registrations;
			}
			set
			{
				this._tbl_registrations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_cities(tbl_city entity)
		{
			this.SendPropertyChanging();
			entity.tbl_country = this;
		}
		
		private void detach_tbl_cities(tbl_city entity)
		{
			this.SendPropertyChanging();
			entity.tbl_country = null;
		}
		
		private void attach_tbl_cities1(tbl_city entity)
		{
			this.SendPropertyChanging();
			entity.tbl_country1 = this;
		}
		
		private void detach_tbl_cities1(tbl_city entity)
		{
			this.SendPropertyChanging();
			entity.tbl_country1 = null;
		}
		
		private void attach_tbl_states(tbl_state entity)
		{
			this.SendPropertyChanging();
			entity.tbl_country = this;
		}
		
		private void detach_tbl_states(tbl_state entity)
		{
			this.SendPropertyChanging();
			entity.tbl_country = null;
		}
		
		private void attach_tbl_states1(tbl_state entity)
		{
			this.SendPropertyChanging();
			entity.tbl_country1 = this;
		}
		
		private void detach_tbl_states1(tbl_state entity)
		{
			this.SendPropertyChanging();
			entity.tbl_country1 = null;
		}
		
		private void attach_tbl_registrations(tbl_registration entity)
		{
			this.SendPropertyChanging();
			entity.tbl_country = this;
		}
		
		private void detach_tbl_registrations(tbl_registration entity)
		{
			this.SendPropertyChanging();
			entity.tbl_country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_state")]
	public partial class tbl_state : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _state_id;
		
		private System.Nullable<int> _country_id;
		
		private string _state_name;
		
		private EntitySet<tbl_city> _tbl_cities;
		
		private EntitySet<tbl_city> _tbl_cities1;
		
		private EntitySet<tbl_registration> _tbl_registrations;
		
		private EntityRef<tbl_country> _tbl_country;
		
		private EntityRef<tbl_country> _tbl_country1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstate_idChanging(int value);
    partial void Onstate_idChanged();
    partial void Oncountry_idChanging(System.Nullable<int> value);
    partial void Oncountry_idChanged();
    partial void Onstate_nameChanging(string value);
    partial void Onstate_nameChanged();
    #endregion
		
		public tbl_state()
		{
			this._tbl_cities = new EntitySet<tbl_city>(new Action<tbl_city>(this.attach_tbl_cities), new Action<tbl_city>(this.detach_tbl_cities));
			this._tbl_cities1 = new EntitySet<tbl_city>(new Action<tbl_city>(this.attach_tbl_cities1), new Action<tbl_city>(this.detach_tbl_cities1));
			this._tbl_registrations = new EntitySet<tbl_registration>(new Action<tbl_registration>(this.attach_tbl_registrations), new Action<tbl_registration>(this.detach_tbl_registrations));
			this._tbl_country = default(EntityRef<tbl_country>);
			this._tbl_country1 = default(EntityRef<tbl_country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_id", DbType="Int")]
		public System.Nullable<int> country_id
		{
			get
			{
				return this._country_id;
			}
			set
			{
				if ((this._country_id != value))
				{
					if ((this._tbl_country.HasLoadedOrAssignedValue || this._tbl_country1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncountry_idChanging(value);
					this.SendPropertyChanging();
					this._country_id = value;
					this.SendPropertyChanged("country_id");
					this.Oncountry_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_name", DbType="NVarChar(10)")]
		public string state_name
		{
			get
			{
				return this._state_name;
			}
			set
			{
				if ((this._state_name != value))
				{
					this.Onstate_nameChanging(value);
					this.SendPropertyChanging();
					this._state_name = value;
					this.SendPropertyChanged("state_name");
					this.Onstate_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_state_tbl_city", Storage="_tbl_cities", ThisKey="state_id", OtherKey="state_id")]
		public EntitySet<tbl_city> tbl_cities
		{
			get
			{
				return this._tbl_cities;
			}
			set
			{
				this._tbl_cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_state_tbl_city1", Storage="_tbl_cities1", ThisKey="state_id", OtherKey="state_id")]
		public EntitySet<tbl_city> tbl_cities1
		{
			get
			{
				return this._tbl_cities1;
			}
			set
			{
				this._tbl_cities1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_state_tbl_registration", Storage="_tbl_registrations", ThisKey="state_id", OtherKey="state_id")]
		public EntitySet<tbl_registration> tbl_registrations
		{
			get
			{
				return this._tbl_registrations;
			}
			set
			{
				this._tbl_registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_country_tbl_state", Storage="_tbl_country", ThisKey="country_id", OtherKey="country_id", IsForeignKey=true)]
		public tbl_country tbl_country
		{
			get
			{
				return this._tbl_country.Entity;
			}
			set
			{
				tbl_country previousValue = this._tbl_country.Entity;
				if (((previousValue != value) 
							|| (this._tbl_country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_country.Entity = null;
						previousValue.tbl_states.Remove(this);
					}
					this._tbl_country.Entity = value;
					if ((value != null))
					{
						value.tbl_states.Add(this);
						this._country_id = value.country_id;
					}
					else
					{
						this._country_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_country_tbl_state1", Storage="_tbl_country1", ThisKey="country_id", OtherKey="country_id", IsForeignKey=true)]
		public tbl_country tbl_country1
		{
			get
			{
				return this._tbl_country1.Entity;
			}
			set
			{
				tbl_country previousValue = this._tbl_country1.Entity;
				if (((previousValue != value) 
							|| (this._tbl_country1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_country1.Entity = null;
						previousValue.tbl_states1.Remove(this);
					}
					this._tbl_country1.Entity = value;
					if ((value != null))
					{
						value.tbl_states1.Add(this);
						this._country_id = value.country_id;
					}
					else
					{
						this._country_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_country1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_cities(tbl_city entity)
		{
			this.SendPropertyChanging();
			entity.tbl_state = this;
		}
		
		private void detach_tbl_cities(tbl_city entity)
		{
			this.SendPropertyChanging();
			entity.tbl_state = null;
		}
		
		private void attach_tbl_cities1(tbl_city entity)
		{
			this.SendPropertyChanging();
			entity.tbl_state1 = this;
		}
		
		private void detach_tbl_cities1(tbl_city entity)
		{
			this.SendPropertyChanging();
			entity.tbl_state1 = null;
		}
		
		private void attach_tbl_registrations(tbl_registration entity)
		{
			this.SendPropertyChanging();
			entity.tbl_state = this;
		}
		
		private void detach_tbl_registrations(tbl_registration entity)
		{
			this.SendPropertyChanging();
			entity.tbl_state = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_view")]
	public partial class tbl_view : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _view_id;
		
		private int _login_id;
		
		private int _video_id;
		
		private System.DateTime _view_date;
		
		private EntityRef<tbl_login> _tbl_login;
		
		private EntityRef<tbl_registration> _tbl_registration;
		
		private EntityRef<tbl_video> _tbl_video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onview_idChanging(int value);
    partial void Onview_idChanged();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void Onvideo_idChanging(int value);
    partial void Onvideo_idChanged();
    partial void Onview_dateChanging(System.DateTime value);
    partial void Onview_dateChanged();
    #endregion
		
		public tbl_view()
		{
			this._tbl_login = default(EntityRef<tbl_login>);
			this._tbl_registration = default(EntityRef<tbl_registration>);
			this._tbl_video = default(EntityRef<tbl_video>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_view_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int view_id
		{
			get
			{
				return this._view_id;
			}
			set
			{
				if ((this._view_id != value))
				{
					this.Onview_idChanging(value);
					this.SendPropertyChanging();
					this._view_id = value;
					this.SendPropertyChanged("view_id");
					this.Onview_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="Int NOT NULL")]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					if ((this._tbl_login.HasLoadedOrAssignedValue || this._tbl_registration.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_id", DbType="Int NOT NULL")]
		public int video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					if (this._tbl_video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_view_date", DbType="Date NOT NULL")]
		public System.DateTime view_date
		{
			get
			{
				return this._view_date;
			}
			set
			{
				if ((this._view_date != value))
				{
					this.Onview_dateChanging(value);
					this.SendPropertyChanging();
					this._view_date = value;
					this.SendPropertyChanged("view_date");
					this.Onview_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_view", Storage="_tbl_login", ThisKey="login_id", OtherKey="login_id", IsForeignKey=true)]
		public tbl_login tbl_login
		{
			get
			{
				return this._tbl_login.Entity;
			}
			set
			{
				tbl_login previousValue = this._tbl_login.Entity;
				if (((previousValue != value) 
							|| (this._tbl_login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_login.Entity = null;
						previousValue.tbl_views.Remove(this);
					}
					this._tbl_login.Entity = value;
					if ((value != null))
					{
						value.tbl_views.Add(this);
						this._login_id = value.login_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_login");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_view", Storage="_tbl_registration", ThisKey="login_id", OtherKey="reg_id", IsForeignKey=true)]
		public tbl_registration tbl_registration
		{
			get
			{
				return this._tbl_registration.Entity;
			}
			set
			{
				tbl_registration previousValue = this._tbl_registration.Entity;
				if (((previousValue != value) 
							|| (this._tbl_registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_registration.Entity = null;
						previousValue.tbl_views.Remove(this);
					}
					this._tbl_registration.Entity = value;
					if ((value != null))
					{
						value.tbl_views.Add(this);
						this._login_id = value.reg_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_registration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_video_tbl_view", Storage="_tbl_video", ThisKey="video_id", OtherKey="video_id", IsForeignKey=true)]
		public tbl_video tbl_video
		{
			get
			{
				return this._tbl_video.Entity;
			}
			set
			{
				tbl_video previousValue = this._tbl_video.Entity;
				if (((previousValue != value) 
							|| (this._tbl_video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_video.Entity = null;
						previousValue.tbl_views.Remove(this);
					}
					this._tbl_video.Entity = value;
					if ((value != null))
					{
						value.tbl_views.Add(this);
						this._video_id = value.video_id;
					}
					else
					{
						this._video_id = default(int);
					}
					this.SendPropertyChanged("tbl_video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_complain")]
	public partial class tbl_complain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _com_id;
		
		private int _login_id;
		
		private string _com_sub;
		
		private string _com_des;
		
		private bool _com_status;
		
		private System.DateTime _com_date;
		
		private EntityRef<tbl_login> _tbl_login;
		
		private EntityRef<tbl_registration> _tbl_registration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncom_idChanging(int value);
    partial void Oncom_idChanged();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void Oncom_subChanging(string value);
    partial void Oncom_subChanged();
    partial void Oncom_desChanging(string value);
    partial void Oncom_desChanged();
    partial void Oncom_statusChanging(bool value);
    partial void Oncom_statusChanged();
    partial void Oncom_dateChanging(System.DateTime value);
    partial void Oncom_dateChanged();
    #endregion
		
		public tbl_complain()
		{
			this._tbl_login = default(EntityRef<tbl_login>);
			this._tbl_registration = default(EntityRef<tbl_registration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_com_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int com_id
		{
			get
			{
				return this._com_id;
			}
			set
			{
				if ((this._com_id != value))
				{
					this.Oncom_idChanging(value);
					this.SendPropertyChanging();
					this._com_id = value;
					this.SendPropertyChanged("com_id");
					this.Oncom_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="Int NOT NULL")]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					if ((this._tbl_login.HasLoadedOrAssignedValue || this._tbl_registration.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_com_sub", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string com_sub
		{
			get
			{
				return this._com_sub;
			}
			set
			{
				if ((this._com_sub != value))
				{
					this.Oncom_subChanging(value);
					this.SendPropertyChanging();
					this._com_sub = value;
					this.SendPropertyChanged("com_sub");
					this.Oncom_subChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_com_des", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string com_des
		{
			get
			{
				return this._com_des;
			}
			set
			{
				if ((this._com_des != value))
				{
					this.Oncom_desChanging(value);
					this.SendPropertyChanging();
					this._com_des = value;
					this.SendPropertyChanged("com_des");
					this.Oncom_desChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_com_status", DbType="Bit NOT NULL")]
		public bool com_status
		{
			get
			{
				return this._com_status;
			}
			set
			{
				if ((this._com_status != value))
				{
					this.Oncom_statusChanging(value);
					this.SendPropertyChanging();
					this._com_status = value;
					this.SendPropertyChanged("com_status");
					this.Oncom_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_com_date", DbType="Date NOT NULL")]
		public System.DateTime com_date
		{
			get
			{
				return this._com_date;
			}
			set
			{
				if ((this._com_date != value))
				{
					this.Oncom_dateChanging(value);
					this.SendPropertyChanging();
					this._com_date = value;
					this.SendPropertyChanged("com_date");
					this.Oncom_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_complain", Storage="_tbl_login", ThisKey="login_id", OtherKey="login_id", IsForeignKey=true)]
		public tbl_login tbl_login
		{
			get
			{
				return this._tbl_login.Entity;
			}
			set
			{
				tbl_login previousValue = this._tbl_login.Entity;
				if (((previousValue != value) 
							|| (this._tbl_login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_login.Entity = null;
						previousValue.tbl_complains.Remove(this);
					}
					this._tbl_login.Entity = value;
					if ((value != null))
					{
						value.tbl_complains.Add(this);
						this._login_id = value.login_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_login");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_complain", Storage="_tbl_registration", ThisKey="login_id", OtherKey="reg_id", IsForeignKey=true)]
		public tbl_registration tbl_registration
		{
			get
			{
				return this._tbl_registration.Entity;
			}
			set
			{
				tbl_registration previousValue = this._tbl_registration.Entity;
				if (((previousValue != value) 
							|| (this._tbl_registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_registration.Entity = null;
						previousValue.tbl_complains.Remove(this);
					}
					this._tbl_registration.Entity = value;
					if ((value != null))
					{
						value.tbl_complains.Add(this);
						this._login_id = value.reg_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_registration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_feedback")]
	public partial class tbl_feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _f_id;
		
		private int _login_id;
		
		private string _f_name;
		
		private string _f_email;
		
		private string _f_des;
		
		private bool _f_status;
		
		private System.DateTime _f_date;
		
		private EntityRef<tbl_login> _tbl_login;
		
		private EntityRef<tbl_registration> _tbl_registration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onf_idChanging(int value);
    partial void Onf_idChanged();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void Onf_nameChanging(string value);
    partial void Onf_nameChanged();
    partial void Onf_emailChanging(string value);
    partial void Onf_emailChanged();
    partial void Onf_desChanging(string value);
    partial void Onf_desChanged();
    partial void Onf_statusChanging(bool value);
    partial void Onf_statusChanged();
    partial void Onf_dateChanging(System.DateTime value);
    partial void Onf_dateChanged();
    #endregion
		
		public tbl_feedback()
		{
			this._tbl_login = default(EntityRef<tbl_login>);
			this._tbl_registration = default(EntityRef<tbl_registration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int f_id
		{
			get
			{
				return this._f_id;
			}
			set
			{
				if ((this._f_id != value))
				{
					this.Onf_idChanging(value);
					this.SendPropertyChanging();
					this._f_id = value;
					this.SendPropertyChanged("f_id");
					this.Onf_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="Int NOT NULL")]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					if ((this._tbl_login.HasLoadedOrAssignedValue || this._tbl_registration.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_name", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string f_name
		{
			get
			{
				return this._f_name;
			}
			set
			{
				if ((this._f_name != value))
				{
					this.Onf_nameChanging(value);
					this.SendPropertyChanging();
					this._f_name = value;
					this.SendPropertyChanged("f_name");
					this.Onf_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_email", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string f_email
		{
			get
			{
				return this._f_email;
			}
			set
			{
				if ((this._f_email != value))
				{
					this.Onf_emailChanging(value);
					this.SendPropertyChanging();
					this._f_email = value;
					this.SendPropertyChanged("f_email");
					this.Onf_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_des", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string f_des
		{
			get
			{
				return this._f_des;
			}
			set
			{
				if ((this._f_des != value))
				{
					this.Onf_desChanging(value);
					this.SendPropertyChanging();
					this._f_des = value;
					this.SendPropertyChanged("f_des");
					this.Onf_desChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_status", DbType="Bit NOT NULL")]
		public bool f_status
		{
			get
			{
				return this._f_status;
			}
			set
			{
				if ((this._f_status != value))
				{
					this.Onf_statusChanging(value);
					this.SendPropertyChanging();
					this._f_status = value;
					this.SendPropertyChanged("f_status");
					this.Onf_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_date", DbType="Date NOT NULL")]
		public System.DateTime f_date
		{
			get
			{
				return this._f_date;
			}
			set
			{
				if ((this._f_date != value))
				{
					this.Onf_dateChanging(value);
					this.SendPropertyChanging();
					this._f_date = value;
					this.SendPropertyChanged("f_date");
					this.Onf_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_feedback", Storage="_tbl_login", ThisKey="login_id", OtherKey="login_id", IsForeignKey=true)]
		public tbl_login tbl_login
		{
			get
			{
				return this._tbl_login.Entity;
			}
			set
			{
				tbl_login previousValue = this._tbl_login.Entity;
				if (((previousValue != value) 
							|| (this._tbl_login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_login.Entity = null;
						previousValue.tbl_feedbacks.Remove(this);
					}
					this._tbl_login.Entity = value;
					if ((value != null))
					{
						value.tbl_feedbacks.Add(this);
						this._login_id = value.login_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_login");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_feedback", Storage="_tbl_registration", ThisKey="login_id", OtherKey="reg_id", IsForeignKey=true)]
		public tbl_registration tbl_registration
		{
			get
			{
				return this._tbl_registration.Entity;
			}
			set
			{
				tbl_registration previousValue = this._tbl_registration.Entity;
				if (((previousValue != value) 
							|| (this._tbl_registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_registration.Entity = null;
						previousValue.tbl_feedbacks.Remove(this);
					}
					this._tbl_registration.Entity = value;
					if ((value != null))
					{
						value.tbl_feedbacks.Add(this);
						this._login_id = value.reg_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_registration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_gender")]
	public partial class tbl_gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private bool _gen_id;
		
		private string _gen_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongen_idChanging(bool value);
    partial void Ongen_idChanged();
    partial void Ongen_nameChanging(string value);
    partial void Ongen_nameChanged();
    #endregion
		
		public tbl_gender()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gen_id", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool gen_id
		{
			get
			{
				return this._gen_id;
			}
			set
			{
				if ((this._gen_id != value))
				{
					this.Ongen_idChanging(value);
					this.SendPropertyChanging();
					this._gen_id = value;
					this.SendPropertyChanged("gen_id");
					this.Ongen_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gen_name", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string gen_name
		{
			get
			{
				return this._gen_name;
			}
			set
			{
				if ((this._gen_name != value))
				{
					this.Ongen_nameChanging(value);
					this.SendPropertyChanging();
					this._gen_name = value;
					this.SendPropertyChanged("gen_name");
					this.Ongen_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_registration")]
	public partial class tbl_registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _reg_id;
		
		private string _reg_fname;
		
		private string _reg_lname;
		
		private int _login_id;
		
		private bool _reg_gender;
		
		private string _reg_photo;
		
		private string _reg_address;
		
		private int _country_id;
		
		private int _state_id;
		
		private int _city_id;
		
		private System.Nullable<decimal> _reg_phno;
		
		private EntitySet<tbl_view> _tbl_views;
		
		private EntitySet<tbl_complain> _tbl_complains;
		
		private EntitySet<tbl_feedback> _tbl_feedbacks;
		
		private EntitySet<tbl_comment> _tbl_comments;
		
		private EntitySet<tbl_video> _tbl_videos;
		
		private EntitySet<tbl_subscription> _tbl_subscriptions;
		
		private EntityRef<tbl_country> _tbl_country;
		
		private EntityRef<tbl_city> _tbl_city;
		
		private EntityRef<tbl_state> _tbl_state;
		
		private EntityRef<tbl_login> _tbl_login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreg_idChanging(int value);
    partial void Onreg_idChanged();
    partial void Onreg_fnameChanging(string value);
    partial void Onreg_fnameChanged();
    partial void Onreg_lnameChanging(string value);
    partial void Onreg_lnameChanged();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void Onreg_genderChanging(bool value);
    partial void Onreg_genderChanged();
    partial void Onreg_photoChanging(string value);
    partial void Onreg_photoChanged();
    partial void Onreg_addressChanging(string value);
    partial void Onreg_addressChanged();
    partial void Oncountry_idChanging(int value);
    partial void Oncountry_idChanged();
    partial void Onstate_idChanging(int value);
    partial void Onstate_idChanged();
    partial void Oncity_idChanging(int value);
    partial void Oncity_idChanged();
    partial void Onreg_phnoChanging(System.Nullable<decimal> value);
    partial void Onreg_phnoChanged();
    #endregion
		
		public tbl_registration()
		{
			this._tbl_views = new EntitySet<tbl_view>(new Action<tbl_view>(this.attach_tbl_views), new Action<tbl_view>(this.detach_tbl_views));
			this._tbl_complains = new EntitySet<tbl_complain>(new Action<tbl_complain>(this.attach_tbl_complains), new Action<tbl_complain>(this.detach_tbl_complains));
			this._tbl_feedbacks = new EntitySet<tbl_feedback>(new Action<tbl_feedback>(this.attach_tbl_feedbacks), new Action<tbl_feedback>(this.detach_tbl_feedbacks));
			this._tbl_comments = new EntitySet<tbl_comment>(new Action<tbl_comment>(this.attach_tbl_comments), new Action<tbl_comment>(this.detach_tbl_comments));
			this._tbl_videos = new EntitySet<tbl_video>(new Action<tbl_video>(this.attach_tbl_videos), new Action<tbl_video>(this.detach_tbl_videos));
			this._tbl_subscriptions = new EntitySet<tbl_subscription>(new Action<tbl_subscription>(this.attach_tbl_subscriptions), new Action<tbl_subscription>(this.detach_tbl_subscriptions));
			this._tbl_country = default(EntityRef<tbl_country>);
			this._tbl_city = default(EntityRef<tbl_city>);
			this._tbl_state = default(EntityRef<tbl_state>);
			this._tbl_login = default(EntityRef<tbl_login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int reg_id
		{
			get
			{
				return this._reg_id;
			}
			set
			{
				if ((this._reg_id != value))
				{
					this.Onreg_idChanging(value);
					this.SendPropertyChanging();
					this._reg_id = value;
					this.SendPropertyChanged("reg_id");
					this.Onreg_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_fname", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string reg_fname
		{
			get
			{
				return this._reg_fname;
			}
			set
			{
				if ((this._reg_fname != value))
				{
					this.Onreg_fnameChanging(value);
					this.SendPropertyChanging();
					this._reg_fname = value;
					this.SendPropertyChanged("reg_fname");
					this.Onreg_fnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_lname", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string reg_lname
		{
			get
			{
				return this._reg_lname;
			}
			set
			{
				if ((this._reg_lname != value))
				{
					this.Onreg_lnameChanging(value);
					this.SendPropertyChanging();
					this._reg_lname = value;
					this.SendPropertyChanged("reg_lname");
					this.Onreg_lnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="Int NOT NULL")]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					if (this._tbl_login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_gender", DbType="Bit NOT NULL")]
		public bool reg_gender
		{
			get
			{
				return this._reg_gender;
			}
			set
			{
				if ((this._reg_gender != value))
				{
					this.Onreg_genderChanging(value);
					this.SendPropertyChanging();
					this._reg_gender = value;
					this.SendPropertyChanged("reg_gender");
					this.Onreg_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_photo", DbType="NVarChar(MAX)")]
		public string reg_photo
		{
			get
			{
				return this._reg_photo;
			}
			set
			{
				if ((this._reg_photo != value))
				{
					this.Onreg_photoChanging(value);
					this.SendPropertyChanging();
					this._reg_photo = value;
					this.SendPropertyChanged("reg_photo");
					this.Onreg_photoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_address", DbType="NVarChar(70)")]
		public string reg_address
		{
			get
			{
				return this._reg_address;
			}
			set
			{
				if ((this._reg_address != value))
				{
					this.Onreg_addressChanging(value);
					this.SendPropertyChanging();
					this._reg_address = value;
					this.SendPropertyChanged("reg_address");
					this.Onreg_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_id", DbType="Int NOT NULL")]
		public int country_id
		{
			get
			{
				return this._country_id;
			}
			set
			{
				if ((this._country_id != value))
				{
					if (this._tbl_country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncountry_idChanging(value);
					this.SendPropertyChanging();
					this._country_id = value;
					this.SendPropertyChanged("country_id");
					this.Oncountry_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="Int NOT NULL")]
		public int state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					if (this._tbl_state.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Int NOT NULL")]
		public int city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					if (this._tbl_city.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_phno", DbType="Decimal(13,0)")]
		public System.Nullable<decimal> reg_phno
		{
			get
			{
				return this._reg_phno;
			}
			set
			{
				if ((this._reg_phno != value))
				{
					this.Onreg_phnoChanging(value);
					this.SendPropertyChanging();
					this._reg_phno = value;
					this.SendPropertyChanged("reg_phno");
					this.Onreg_phnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_view", Storage="_tbl_views", ThisKey="reg_id", OtherKey="login_id")]
		public EntitySet<tbl_view> tbl_views
		{
			get
			{
				return this._tbl_views;
			}
			set
			{
				this._tbl_views.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_complain", Storage="_tbl_complains", ThisKey="reg_id", OtherKey="login_id")]
		public EntitySet<tbl_complain> tbl_complains
		{
			get
			{
				return this._tbl_complains;
			}
			set
			{
				this._tbl_complains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_feedback", Storage="_tbl_feedbacks", ThisKey="reg_id", OtherKey="login_id")]
		public EntitySet<tbl_feedback> tbl_feedbacks
		{
			get
			{
				return this._tbl_feedbacks;
			}
			set
			{
				this._tbl_feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_comment", Storage="_tbl_comments", ThisKey="reg_id", OtherKey="login_id")]
		public EntitySet<tbl_comment> tbl_comments
		{
			get
			{
				return this._tbl_comments;
			}
			set
			{
				this._tbl_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_video", Storage="_tbl_videos", ThisKey="reg_id", OtherKey="login_id")]
		public EntitySet<tbl_video> tbl_videos
		{
			get
			{
				return this._tbl_videos;
			}
			set
			{
				this._tbl_videos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_subscription", Storage="_tbl_subscriptions", ThisKey="reg_id", OtherKey="login_id")]
		public EntitySet<tbl_subscription> tbl_subscriptions
		{
			get
			{
				return this._tbl_subscriptions;
			}
			set
			{
				this._tbl_subscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_country_tbl_registration", Storage="_tbl_country", ThisKey="country_id", OtherKey="country_id", IsForeignKey=true)]
		public tbl_country tbl_country
		{
			get
			{
				return this._tbl_country.Entity;
			}
			set
			{
				tbl_country previousValue = this._tbl_country.Entity;
				if (((previousValue != value) 
							|| (this._tbl_country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_country.Entity = null;
						previousValue.tbl_registrations.Remove(this);
					}
					this._tbl_country.Entity = value;
					if ((value != null))
					{
						value.tbl_registrations.Add(this);
						this._country_id = value.country_id;
					}
					else
					{
						this._country_id = default(int);
					}
					this.SendPropertyChanged("tbl_country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_city_tbl_registration", Storage="_tbl_city", ThisKey="city_id", OtherKey="city_id", IsForeignKey=true)]
		public tbl_city tbl_city
		{
			get
			{
				return this._tbl_city.Entity;
			}
			set
			{
				tbl_city previousValue = this._tbl_city.Entity;
				if (((previousValue != value) 
							|| (this._tbl_city.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_city.Entity = null;
						previousValue.tbl_registrations.Remove(this);
					}
					this._tbl_city.Entity = value;
					if ((value != null))
					{
						value.tbl_registrations.Add(this);
						this._city_id = value.city_id;
					}
					else
					{
						this._city_id = default(int);
					}
					this.SendPropertyChanged("tbl_city");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_state_tbl_registration", Storage="_tbl_state", ThisKey="state_id", OtherKey="state_id", IsForeignKey=true)]
		public tbl_state tbl_state
		{
			get
			{
				return this._tbl_state.Entity;
			}
			set
			{
				tbl_state previousValue = this._tbl_state.Entity;
				if (((previousValue != value) 
							|| (this._tbl_state.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_state.Entity = null;
						previousValue.tbl_registrations.Remove(this);
					}
					this._tbl_state.Entity = value;
					if ((value != null))
					{
						value.tbl_registrations.Add(this);
						this._state_id = value.state_id;
					}
					else
					{
						this._state_id = default(int);
					}
					this.SendPropertyChanged("tbl_state");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_registration", Storage="_tbl_login", ThisKey="login_id", OtherKey="login_id", IsForeignKey=true)]
		public tbl_login tbl_login
		{
			get
			{
				return this._tbl_login.Entity;
			}
			set
			{
				tbl_login previousValue = this._tbl_login.Entity;
				if (((previousValue != value) 
							|| (this._tbl_login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_login.Entity = null;
						previousValue.tbl_registrations.Remove(this);
					}
					this._tbl_login.Entity = value;
					if ((value != null))
					{
						value.tbl_registrations.Add(this);
						this._login_id = value.login_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_views(tbl_view entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = this;
		}
		
		private void detach_tbl_views(tbl_view entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = null;
		}
		
		private void attach_tbl_complains(tbl_complain entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = this;
		}
		
		private void detach_tbl_complains(tbl_complain entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = null;
		}
		
		private void attach_tbl_feedbacks(tbl_feedback entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = this;
		}
		
		private void detach_tbl_feedbacks(tbl_feedback entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = null;
		}
		
		private void attach_tbl_comments(tbl_comment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = this;
		}
		
		private void detach_tbl_comments(tbl_comment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = null;
		}
		
		private void attach_tbl_videos(tbl_video entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = this;
		}
		
		private void detach_tbl_videos(tbl_video entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = null;
		}
		
		private void attach_tbl_subscriptions(tbl_subscription entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = this;
		}
		
		private void detach_tbl_subscriptions(tbl_subscription entity)
		{
			this.SendPropertyChanging();
			entity.tbl_registration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.demo")]
	public partial class demo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public demo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_login")]
	public partial class tbl_login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _login_id;
		
		private string _email;
		
		private string _password;
		
		private string _log_status;
		
		private System.DateTime _log_date;
		
		private EntitySet<tbl_view> _tbl_views;
		
		private EntitySet<tbl_complain> _tbl_complains;
		
		private EntitySet<tbl_feedback> _tbl_feedbacks;
		
		private EntitySet<tbl_registration> _tbl_registrations;
		
		private EntitySet<tbl_comment> _tbl_comments;
		
		private EntitySet<tbl_subscription> _tbl_subscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onlog_statusChanging(string value);
    partial void Onlog_statusChanged();
    partial void Onlog_dateChanging(System.DateTime value);
    partial void Onlog_dateChanged();
    #endregion
		
		public tbl_login()
		{
			this._tbl_views = new EntitySet<tbl_view>(new Action<tbl_view>(this.attach_tbl_views), new Action<tbl_view>(this.detach_tbl_views));
			this._tbl_complains = new EntitySet<tbl_complain>(new Action<tbl_complain>(this.attach_tbl_complains), new Action<tbl_complain>(this.detach_tbl_complains));
			this._tbl_feedbacks = new EntitySet<tbl_feedback>(new Action<tbl_feedback>(this.attach_tbl_feedbacks), new Action<tbl_feedback>(this.detach_tbl_feedbacks));
			this._tbl_registrations = new EntitySet<tbl_registration>(new Action<tbl_registration>(this.attach_tbl_registrations), new Action<tbl_registration>(this.detach_tbl_registrations));
			this._tbl_comments = new EntitySet<tbl_comment>(new Action<tbl_comment>(this.attach_tbl_comments), new Action<tbl_comment>(this.detach_tbl_comments));
			this._tbl_subscriptions = new EntitySet<tbl_subscription>(new Action<tbl_subscription>(this.attach_tbl_subscriptions), new Action<tbl_subscription>(this.detach_tbl_subscriptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_log_status", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string log_status
		{
			get
			{
				return this._log_status;
			}
			set
			{
				if ((this._log_status != value))
				{
					this.Onlog_statusChanging(value);
					this.SendPropertyChanging();
					this._log_status = value;
					this.SendPropertyChanged("log_status");
					this.Onlog_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_log_date", DbType="DateTime NOT NULL")]
		public System.DateTime log_date
		{
			get
			{
				return this._log_date;
			}
			set
			{
				if ((this._log_date != value))
				{
					this.Onlog_dateChanging(value);
					this.SendPropertyChanging();
					this._log_date = value;
					this.SendPropertyChanged("log_date");
					this.Onlog_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_view", Storage="_tbl_views", ThisKey="login_id", OtherKey="login_id")]
		public EntitySet<tbl_view> tbl_views
		{
			get
			{
				return this._tbl_views;
			}
			set
			{
				this._tbl_views.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_complain", Storage="_tbl_complains", ThisKey="login_id", OtherKey="login_id")]
		public EntitySet<tbl_complain> tbl_complains
		{
			get
			{
				return this._tbl_complains;
			}
			set
			{
				this._tbl_complains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_feedback", Storage="_tbl_feedbacks", ThisKey="login_id", OtherKey="login_id")]
		public EntitySet<tbl_feedback> tbl_feedbacks
		{
			get
			{
				return this._tbl_feedbacks;
			}
			set
			{
				this._tbl_feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_registration", Storage="_tbl_registrations", ThisKey="login_id", OtherKey="login_id")]
		public EntitySet<tbl_registration> tbl_registrations
		{
			get
			{
				return this._tbl_registrations;
			}
			set
			{
				this._tbl_registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_comment", Storage="_tbl_comments", ThisKey="login_id", OtherKey="login_id")]
		public EntitySet<tbl_comment> tbl_comments
		{
			get
			{
				return this._tbl_comments;
			}
			set
			{
				this._tbl_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_subscription", Storage="_tbl_subscriptions", ThisKey="login_id", OtherKey="login_id")]
		public EntitySet<tbl_subscription> tbl_subscriptions
		{
			get
			{
				return this._tbl_subscriptions;
			}
			set
			{
				this._tbl_subscriptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_views(tbl_view entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = this;
		}
		
		private void detach_tbl_views(tbl_view entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = null;
		}
		
		private void attach_tbl_complains(tbl_complain entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = this;
		}
		
		private void detach_tbl_complains(tbl_complain entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = null;
		}
		
		private void attach_tbl_feedbacks(tbl_feedback entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = this;
		}
		
		private void detach_tbl_feedbacks(tbl_feedback entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = null;
		}
		
		private void attach_tbl_registrations(tbl_registration entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = this;
		}
		
		private void detach_tbl_registrations(tbl_registration entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = null;
		}
		
		private void attach_tbl_comments(tbl_comment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = this;
		}
		
		private void detach_tbl_comments(tbl_comment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = null;
		}
		
		private void attach_tbl_subscriptions(tbl_subscription entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = this;
		}
		
		private void detach_tbl_subscriptions(tbl_subscription entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_comment")]
	public partial class tbl_comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _comment_id;
		
		private int _login_id;
		
		private int _video_id;
		
		private string _comment_des;
		
		private System.DateTime _comment_date;
		
		private EntityRef<tbl_registration> _tbl_registration;
		
		private EntityRef<tbl_login> _tbl_login;
		
		private EntityRef<tbl_video> _tbl_video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncomment_idChanging(int value);
    partial void Oncomment_idChanged();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void Onvideo_idChanging(int value);
    partial void Onvideo_idChanged();
    partial void Oncomment_desChanging(string value);
    partial void Oncomment_desChanged();
    partial void Oncomment_dateChanging(System.DateTime value);
    partial void Oncomment_dateChanged();
    #endregion
		
		public tbl_comment()
		{
			this._tbl_registration = default(EntityRef<tbl_registration>);
			this._tbl_login = default(EntityRef<tbl_login>);
			this._tbl_video = default(EntityRef<tbl_video>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int comment_id
		{
			get
			{
				return this._comment_id;
			}
			set
			{
				if ((this._comment_id != value))
				{
					this.Oncomment_idChanging(value);
					this.SendPropertyChanging();
					this._comment_id = value;
					this.SendPropertyChanged("comment_id");
					this.Oncomment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="Int NOT NULL")]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					if ((this._tbl_registration.HasLoadedOrAssignedValue || this._tbl_login.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_id", DbType="Int NOT NULL")]
		public int video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					if (this._tbl_video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_des", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string comment_des
		{
			get
			{
				return this._comment_des;
			}
			set
			{
				if ((this._comment_des != value))
				{
					this.Oncomment_desChanging(value);
					this.SendPropertyChanging();
					this._comment_des = value;
					this.SendPropertyChanged("comment_des");
					this.Oncomment_desChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_date", DbType="Date NOT NULL")]
		public System.DateTime comment_date
		{
			get
			{
				return this._comment_date;
			}
			set
			{
				if ((this._comment_date != value))
				{
					this.Oncomment_dateChanging(value);
					this.SendPropertyChanging();
					this._comment_date = value;
					this.SendPropertyChanged("comment_date");
					this.Oncomment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_comment", Storage="_tbl_registration", ThisKey="login_id", OtherKey="reg_id", IsForeignKey=true)]
		public tbl_registration tbl_registration
		{
			get
			{
				return this._tbl_registration.Entity;
			}
			set
			{
				tbl_registration previousValue = this._tbl_registration.Entity;
				if (((previousValue != value) 
							|| (this._tbl_registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_registration.Entity = null;
						previousValue.tbl_comments.Remove(this);
					}
					this._tbl_registration.Entity = value;
					if ((value != null))
					{
						value.tbl_comments.Add(this);
						this._login_id = value.reg_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_registration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_comment", Storage="_tbl_login", ThisKey="login_id", OtherKey="login_id", IsForeignKey=true)]
		public tbl_login tbl_login
		{
			get
			{
				return this._tbl_login.Entity;
			}
			set
			{
				tbl_login previousValue = this._tbl_login.Entity;
				if (((previousValue != value) 
							|| (this._tbl_login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_login.Entity = null;
						previousValue.tbl_comments.Remove(this);
					}
					this._tbl_login.Entity = value;
					if ((value != null))
					{
						value.tbl_comments.Add(this);
						this._login_id = value.login_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_login");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_video_tbl_comment", Storage="_tbl_video", ThisKey="video_id", OtherKey="video_id", IsForeignKey=true)]
		public tbl_video tbl_video
		{
			get
			{
				return this._tbl_video.Entity;
			}
			set
			{
				tbl_video previousValue = this._tbl_video.Entity;
				if (((previousValue != value) 
							|| (this._tbl_video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_video.Entity = null;
						previousValue.tbl_comments.Remove(this);
					}
					this._tbl_video.Entity = value;
					if ((value != null))
					{
						value.tbl_comments.Add(this);
						this._video_id = value.video_id;
					}
					else
					{
						this._video_id = default(int);
					}
					this.SendPropertyChanged("tbl_video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_video")]
	public partial class tbl_video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _video_id;
		
		private int _login_id;
		
		private int _cat_id;
		
		private int _sub_cat_id;
		
		private string _video_name;
		
		private string _video_des;
		
		private string _video_path;
		
		private string _video_thumb;
		
		private System.DateTime _video_date;
		
		private System.Nullable<bool> _video_paid;
		
		private EntitySet<tbl_view> _tbl_views;
		
		private EntitySet<tbl_comment> _tbl_comments;
		
		private EntityRef<tbl_registration> _tbl_registration;
		
		private EntityRef<tbl_category> _tbl_category;
		
		private EntityRef<tbl_sub_category> _tbl_sub_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvideo_idChanging(int value);
    partial void Onvideo_idChanged();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void Oncat_idChanging(int value);
    partial void Oncat_idChanged();
    partial void Onsub_cat_idChanging(int value);
    partial void Onsub_cat_idChanged();
    partial void Onvideo_nameChanging(string value);
    partial void Onvideo_nameChanged();
    partial void Onvideo_desChanging(string value);
    partial void Onvideo_desChanged();
    partial void Onvideo_pathChanging(string value);
    partial void Onvideo_pathChanged();
    partial void Onvideo_thumbChanging(string value);
    partial void Onvideo_thumbChanged();
    partial void Onvideo_dateChanging(System.DateTime value);
    partial void Onvideo_dateChanged();
    partial void Onvideo_paidChanging(System.Nullable<bool> value);
    partial void Onvideo_paidChanged();
    #endregion
		
		public tbl_video()
		{
			this._tbl_views = new EntitySet<tbl_view>(new Action<tbl_view>(this.attach_tbl_views), new Action<tbl_view>(this.detach_tbl_views));
			this._tbl_comments = new EntitySet<tbl_comment>(new Action<tbl_comment>(this.attach_tbl_comments), new Action<tbl_comment>(this.detach_tbl_comments));
			this._tbl_registration = default(EntityRef<tbl_registration>);
			this._tbl_category = default(EntityRef<tbl_category>);
			this._tbl_sub_category = default(EntityRef<tbl_sub_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="Int NOT NULL")]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					if (this._tbl_registration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="Int NOT NULL")]
		public int cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._tbl_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_cat_id", DbType="Int NOT NULL")]
		public int sub_cat_id
		{
			get
			{
				return this._sub_cat_id;
			}
			set
			{
				if ((this._sub_cat_id != value))
				{
					if (this._tbl_sub_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsub_cat_idChanging(value);
					this.SendPropertyChanging();
					this._sub_cat_id = value;
					this.SendPropertyChanged("sub_cat_id");
					this.Onsub_cat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string video_name
		{
			get
			{
				return this._video_name;
			}
			set
			{
				if ((this._video_name != value))
				{
					this.Onvideo_nameChanging(value);
					this.SendPropertyChanging();
					this._video_name = value;
					this.SendPropertyChanged("video_name");
					this.Onvideo_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_des", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string video_des
		{
			get
			{
				return this._video_des;
			}
			set
			{
				if ((this._video_des != value))
				{
					this.Onvideo_desChanging(value);
					this.SendPropertyChanging();
					this._video_des = value;
					this.SendPropertyChanged("video_des");
					this.Onvideo_desChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_path", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string video_path
		{
			get
			{
				return this._video_path;
			}
			set
			{
				if ((this._video_path != value))
				{
					this.Onvideo_pathChanging(value);
					this.SendPropertyChanging();
					this._video_path = value;
					this.SendPropertyChanged("video_path");
					this.Onvideo_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_thumb", DbType="NVarChar(MAX)")]
		public string video_thumb
		{
			get
			{
				return this._video_thumb;
			}
			set
			{
				if ((this._video_thumb != value))
				{
					this.Onvideo_thumbChanging(value);
					this.SendPropertyChanging();
					this._video_thumb = value;
					this.SendPropertyChanged("video_thumb");
					this.Onvideo_thumbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_date", DbType="Date NOT NULL")]
		public System.DateTime video_date
		{
			get
			{
				return this._video_date;
			}
			set
			{
				if ((this._video_date != value))
				{
					this.Onvideo_dateChanging(value);
					this.SendPropertyChanging();
					this._video_date = value;
					this.SendPropertyChanged("video_date");
					this.Onvideo_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_paid", DbType="Bit")]
		public System.Nullable<bool> video_paid
		{
			get
			{
				return this._video_paid;
			}
			set
			{
				if ((this._video_paid != value))
				{
					this.Onvideo_paidChanging(value);
					this.SendPropertyChanging();
					this._video_paid = value;
					this.SendPropertyChanged("video_paid");
					this.Onvideo_paidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_video_tbl_view", Storage="_tbl_views", ThisKey="video_id", OtherKey="video_id")]
		public EntitySet<tbl_view> tbl_views
		{
			get
			{
				return this._tbl_views;
			}
			set
			{
				this._tbl_views.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_video_tbl_comment", Storage="_tbl_comments", ThisKey="video_id", OtherKey="video_id")]
		public EntitySet<tbl_comment> tbl_comments
		{
			get
			{
				return this._tbl_comments;
			}
			set
			{
				this._tbl_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_video", Storage="_tbl_registration", ThisKey="login_id", OtherKey="reg_id", IsForeignKey=true)]
		public tbl_registration tbl_registration
		{
			get
			{
				return this._tbl_registration.Entity;
			}
			set
			{
				tbl_registration previousValue = this._tbl_registration.Entity;
				if (((previousValue != value) 
							|| (this._tbl_registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_registration.Entity = null;
						previousValue.tbl_videos.Remove(this);
					}
					this._tbl_registration.Entity = value;
					if ((value != null))
					{
						value.tbl_videos.Add(this);
						this._login_id = value.reg_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_registration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_category_tbl_video", Storage="_tbl_category", ThisKey="cat_id", OtherKey="cat_id", IsForeignKey=true)]
		public tbl_category tbl_category
		{
			get
			{
				return this._tbl_category.Entity;
			}
			set
			{
				tbl_category previousValue = this._tbl_category.Entity;
				if (((previousValue != value) 
							|| (this._tbl_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_category.Entity = null;
						previousValue.tbl_videos.Remove(this);
					}
					this._tbl_category.Entity = value;
					if ((value != null))
					{
						value.tbl_videos.Add(this);
						this._cat_id = value.cat_id;
					}
					else
					{
						this._cat_id = default(int);
					}
					this.SendPropertyChanged("tbl_category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_sub_category_tbl_video", Storage="_tbl_sub_category", ThisKey="sub_cat_id", OtherKey="sub_cat_id", IsForeignKey=true)]
		public tbl_sub_category tbl_sub_category
		{
			get
			{
				return this._tbl_sub_category.Entity;
			}
			set
			{
				tbl_sub_category previousValue = this._tbl_sub_category.Entity;
				if (((previousValue != value) 
							|| (this._tbl_sub_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_sub_category.Entity = null;
						previousValue.tbl_videos.Remove(this);
					}
					this._tbl_sub_category.Entity = value;
					if ((value != null))
					{
						value.tbl_videos.Add(this);
						this._sub_cat_id = value.sub_cat_id;
					}
					else
					{
						this._sub_cat_id = default(int);
					}
					this.SendPropertyChanged("tbl_sub_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_views(tbl_view entity)
		{
			this.SendPropertyChanging();
			entity.tbl_video = this;
		}
		
		private void detach_tbl_views(tbl_view entity)
		{
			this.SendPropertyChanging();
			entity.tbl_video = null;
		}
		
		private void attach_tbl_comments(tbl_comment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_video = this;
		}
		
		private void detach_tbl_comments(tbl_comment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_video = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_subscription")]
	public partial class tbl_subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sub_id;
		
		private int _login_id;
		
		private System.DateTime _sub_pay_date;
		
		private System.DateTime _sub_end_date;
		
		private int _sub_amt;
		
		private EntityRef<tbl_registration> _tbl_registration;
		
		private EntityRef<tbl_login> _tbl_login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsub_idChanging(int value);
    partial void Onsub_idChanged();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void Onsub_pay_dateChanging(System.DateTime value);
    partial void Onsub_pay_dateChanged();
    partial void Onsub_end_dateChanging(System.DateTime value);
    partial void Onsub_end_dateChanged();
    partial void Onsub_amtChanging(int value);
    partial void Onsub_amtChanged();
    #endregion
		
		public tbl_subscription()
		{
			this._tbl_registration = default(EntityRef<tbl_registration>);
			this._tbl_login = default(EntityRef<tbl_login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sub_id
		{
			get
			{
				return this._sub_id;
			}
			set
			{
				if ((this._sub_id != value))
				{
					this.Onsub_idChanging(value);
					this.SendPropertyChanging();
					this._sub_id = value;
					this.SendPropertyChanged("sub_id");
					this.Onsub_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="Int NOT NULL")]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					if ((this._tbl_registration.HasLoadedOrAssignedValue || this._tbl_login.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_pay_date", DbType="DateTime NOT NULL")]
		public System.DateTime sub_pay_date
		{
			get
			{
				return this._sub_pay_date;
			}
			set
			{
				if ((this._sub_pay_date != value))
				{
					this.Onsub_pay_dateChanging(value);
					this.SendPropertyChanging();
					this._sub_pay_date = value;
					this.SendPropertyChanged("sub_pay_date");
					this.Onsub_pay_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_end_date", DbType="Date NOT NULL")]
		public System.DateTime sub_end_date
		{
			get
			{
				return this._sub_end_date;
			}
			set
			{
				if ((this._sub_end_date != value))
				{
					this.Onsub_end_dateChanging(value);
					this.SendPropertyChanging();
					this._sub_end_date = value;
					this.SendPropertyChanged("sub_end_date");
					this.Onsub_end_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_amt", DbType="Int NOT NULL")]
		public int sub_amt
		{
			get
			{
				return this._sub_amt;
			}
			set
			{
				if ((this._sub_amt != value))
				{
					this.Onsub_amtChanging(value);
					this.SendPropertyChanging();
					this._sub_amt = value;
					this.SendPropertyChanged("sub_amt");
					this.Onsub_amtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_registration_tbl_subscription", Storage="_tbl_registration", ThisKey="login_id", OtherKey="reg_id", IsForeignKey=true)]
		public tbl_registration tbl_registration
		{
			get
			{
				return this._tbl_registration.Entity;
			}
			set
			{
				tbl_registration previousValue = this._tbl_registration.Entity;
				if (((previousValue != value) 
							|| (this._tbl_registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_registration.Entity = null;
						previousValue.tbl_subscriptions.Remove(this);
					}
					this._tbl_registration.Entity = value;
					if ((value != null))
					{
						value.tbl_subscriptions.Add(this);
						this._login_id = value.reg_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_registration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_subscription", Storage="_tbl_login", ThisKey="login_id", OtherKey="login_id", IsForeignKey=true)]
		public tbl_login tbl_login
		{
			get
			{
				return this._tbl_login.Entity;
			}
			set
			{
				tbl_login previousValue = this._tbl_login.Entity;
				if (((previousValue != value) 
							|| (this._tbl_login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_login.Entity = null;
						previousValue.tbl_subscriptions.Remove(this);
					}
					this._tbl_login.Entity = value;
					if ((value != null))
					{
						value.tbl_subscriptions.Add(this);
						this._login_id = value.login_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
